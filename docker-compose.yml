version: '3.8'

services:
  dynamodb-local:
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_DEFAULT_REGION=us-west-2

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=dummy
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis-master:
      image: redis:latest
      container_name: redis-master
      command:
        [
            "redis-server",
            "--port",
            "6380",
            "--protected-mode",
            "no"
        ]
      network_mode: host
      volumes:
          - redis_ha_master_data:/data


  redis-slave-1:
      image: redis:latest
      container_name: redis-slave-1
      depends_on:
          - redis-master
      command:
        [
            "redis-server",
            "--port",
            "6381",
            "--replicaof",
            "127.0.0.1",
            "6380",
            "--protected-mode",
            "no"
        ]
      network_mode: host
      volumes:
          - redis_ha_slave_1_data:/data


  redis-slave-2:
      image: redis:latest
      container_name: redis-slave-2
      depends_on:
          - redis-master
      command:
        [
            "redis-server",
            "--port",
            "6382",
            "--replicaof",
            "127.0.0.1",
            "6380",
            "--protected-mode",
            "no"
        ]
      network_mode: host
      volumes:
          - redis_ha_slave_2_data:/data


  sentinel-1:
      image: redis:latest
      container_name: sentinel-1
      depends_on:
          - redis-master
      configs:
          - source: sentinel
            target: /data/sentinel.conf
            mode: 0660
            uid: "999"
      command:
        [
            "redis-server",
            "sentinel.conf",
            "--port",
            "26379",
            "--sentinel",
        ]
      network_mode: host
      ports:
          - "26379:26379"
      volumes:
          - redis_ha_sentinel_1_data:/data


  sentinel-2:
      image: redis:latest
      container_name: sentinel-2
      depends_on:
          - redis-master
      configs:
          - source: sentinel
            target: /data/sentinel.conf
            mode: 0660
            uid: "999"
      command:
        [
            "redis-server",
            "sentinel.conf",
            "--port",
            "26380",
            "--sentinel",
        ]
      network_mode: host
      volumes:
          - redis_ha_sentinel_2_data:/data


  sentinel-3:
      image: redis:latest
      container_name: sentinel-3
      depends_on:
          - redis-master
      configs:
          - source: sentinel
            target: /data/sentinel.conf
            mode: 0660
            uid: "999"
      command:
        [
            "redis-server",
            "sentinel.conf",
            "--port",
            "26381",
            "--sentinel",
        ]
      network_mode: host
      volumes:
          - redis_ha_sentinel_3_data:/data

volumes:
    postgres_data:
    mongo_data:
    redis_data:
    dynamodb_data:
    redis_ha_master_data:
    redis_ha_slave_1_data:
    redis_ha_slave_2_data:
    redis_ha_sentinel_1_data:
    redis_ha_sentinel_2_data:
    redis_ha_sentinel_3_data:

configs:
    sentinel:
        content: |
            bind 0.0.0.0
            sentinel monitor mymaster 127.0.0.1 6380 2
            sentinel resolve-hostnames yes
            sentinel down-after-milliseconds mymaster 5000
            sentinel failover-timeout mymaster 5000
            sentinel parallel-syncs mymaster 1